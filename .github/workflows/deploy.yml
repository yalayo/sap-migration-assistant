name: Build and Test Docker Container

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Build and Test Docker Container

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Inject DATABASE_ID into wrangler.toml
        run: |
          sed -i "s|database_id = \".*\"|database_id = \"${{ secrets.DATABASE_ID }}\"|" wrangler.toml

      # Optional: generate migrations if schema may have changed
      - name: Generate D1 migrations
        run: npx tsx scripts/generate-d1-migrations.ts

      - name: Deploy D1 Database Schema
        run: |
          ls -l migrations-d1
          npx wrangler d1 migrations apply migration-assistant-db --env=production
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Deploy Workers
        run: npx wrangler deploy --env production
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Show Wrangler logs if deploy failed
        if: failure()
        run: tail -n 50 ~/.config/.wrangler/logs/wrangler-*.log || true